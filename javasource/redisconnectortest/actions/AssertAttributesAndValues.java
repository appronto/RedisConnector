// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package redisconnectortest.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import unittesting.TestManager;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.meta.IMetaPrimitive;
import com.mendix.systemwideinterfaces.core.meta.IMetaPrimitive.PrimitiveType;

public class AssertAttributesAndValues extends CustomJavaAction<Boolean>
{
	private IMendixObject Source;
	private IMendixObject Target;

	public AssertAttributesAndValues(IContext context, IMendixObject Source, IMendixObject Target)
	{
		super(context);
		this.Source = Source;
		this.Target = Target;
	}

	@Override
	public Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		if (Source == null)
			throw new IllegalStateException("source is null");
		if (Target == null)
			throw new IllegalStateException("target is null");
		
		for(IMetaPrimitive e : Target.getMetaObject().getMetaPrimitives()) {
			if (e.isVirtual() || e.getType() == PrimitiveType.AutoNumber)
				continue;
			if (!Source.hasMember(e.getName()))
				throw new TestManager.AssertionException("Attribute of "+e.getName() + " is not present in Source: " + Source.getMetaObject().getName());
			if ( !Source.getValue(getContext(), e.getName()).equals(Target.getValue(getContext(), e.getName())))
			{
				throw new TestManager.AssertionException("Value of "+ Source.getMetaObject().getName() + " / " + e.getName() + " is not equal; was \""+ Target.getValue(getContext(), e.getName()) +"\" expected \"" + Source.getValue(getContext(), e.getName())+"\"" );
			}
		}
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "AssertAttributesAndValues";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
